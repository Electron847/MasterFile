{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Bold;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red47\green180\blue29;\red64\green11\blue217;
}
{\*\expandedcolortbl;;\csgray\c0;\cssrgb\c20238\c73898\c14947;\cssrgb\c32308\c18668\c88227;
}
\margl1440\margr1440\vieww11820\viewh8380\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b\fs22 \cf2 \ul \ulc2 \CocoaLigature0 PART C and E:
\f1\b0 \ulnone  In order to use the program container.c compile using terminal command \'93gcc -o <name of executable file> container.c to create the <name of executable file>. Next run the command \'93./<name of executable file> <NewHostName>\'94. For example: \
\
gcc -o container1 container.c \'97> creates file \'93container1\'94\
./container1 NewHostName  \'97> runs program with container hostname = NewHostName\
Below is an example of the program running as \'93./demo4\'94 executable file. 
\f0\b \cf3 \
\
ubuntu@ip-172-31-48-79
\f1\b0 \cf2 :
\f0\b \cf4 ~
\f1\b0 \cf2 $ ./demo4 NewHostName\
PID of child created by clone() is 22616\
PID in make cpu dir: 22616\
Inside the cgroup file writer!  ok \
param.clone_name in parent: (null)\
getpgrp call: 0\
Clone PID: 1\
Parent PID: 0\
Making procfs at /proc\
uts.nodename in child:  NewHostName\

\f0\b \cf3 nobody@NewHostName
\f1\b0 \cf2 :
\f0\b \cf4 ~
\f1\b0 \cf2 $ \
\
> This will create a new container with the desired hostname running in an isolated namespace with the cpu% usage at 50%\
> At the moment I did not create a pathway to allow the user to input cgroup variables from the command line\
> At this moment I did not create a pathway to allow the user to input an N-container argument into the command line to create N-levels of containers-in-containers\
> The values for cgroup cpu_pcct as described in the cgd.c file are hardcoded into the program as follows\
\
\

\f0\b \cf3 ubuntu@ip-172-31-48-79
\f1\b0 \cf2 :
\f0\b \cf4 ~
\f1\b0 \cf2 $ ls /sys/fs/cgroup/cpuacct/cgdemo\

\f0\b \cf4 17232
\f1\b0 \cf2   
\f0\b \cf4 17502
\f1\b0 \cf2   
\f0\b \cf4 22616
\f1\b0 \cf2                   cpuacct.usage         cpu.stat\

\f0\b \cf4 17242
\f1\b0 \cf2   
\f0\b \cf4 17519
\f1\b0 \cf2   
\f0\b \cf4 24841
\f1\b0 \cf2                   cpuacct.usage_percpu  notify_on_release\

\f0\b \cf4 17261
\f1\b0 \cf2   
\f0\b \cf4 17537
\f1\b0 \cf2   cgroup.clone_children  cpu.cfs_period_us     tasks\

\f0\b \cf4 17439
\f1\b0 \cf2   
\f0\b \cf4 17689
\f1\b0 \cf2   cgroup.procs           cpu.cfs_quota_us\

\f0\b \cf4 17470
\f1\b0 \cf2   
\f0\b \cf4 17748
\f1\b0 \cf2   cpuacct.stat           cpu.shares\

\f0\b \cf3 ubuntu@ip-172-31-48-79
\f1\b0 \cf2 :
\f0\b \cf4 ~
\f1\b0 \cf2 $ ls /sys/fs/cgroup/cpuacct/cgdemo/24841\
cgroup.clone_children  cpuacct.usage_percpu  cpu.stat\
cgroup.procs           cpu.cfs_period_us     notify_on_release\
cpuacct.stat           cpu.cfs_quota_us      tasks\
cpuacct.usage          cpu.shares\

\f0\b \cf3 ubuntu@ip-172-31-48-79
\f1\b0 \cf2 :
\f0\b \cf4 ~
\f1\b0 \cf2 $ cat /sys/fs/cgroup/cpuacct/cgdemo/24841/cpu.cfs_quota_us\
50000\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b \ul \ulc2 PART F:
\f1\b0 \ulnone \
\
With rootfs.tar container.c img1.c img.h in the same directory\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b \cf3 ubuntu@ip-172-31-48-79
\f1\b0 \cf2 :
\f0\b \cf4 ~
\f1\b0 \cf2 $ sudo tar xvf ./rootfs.tar\
\
cc -g -c container.c img1.c install_rootg.c\
cc -g -o runContainer container.o img1.o install_rootg.o -larchive\
\
\
\
}